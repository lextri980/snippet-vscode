{
  //! Comment in method attribute ------------------------------------------------------------------------------------------------------------------
  "Comment method in vue": {
    "scope": "javascript, typescript, vue",
    "prefix": "cv",
    "body": [
      "/* <!--@--> ($1): $2 ------------------------------------------------------------------------- */"
    ]
  },
  "Comment async method in vue": {
    "scope": "javascript, typescript, vue",
    "prefix": "cav",
    "body": [
      "/* <!--!--> Fetch: $1 /$2 ($3): $4 ------------------------------------------------------------------------- */"
    ]
  },

  //! Function generate in method ------------------------------------------------------------------------------------------------------------------
  "Function in method in vue": {
    "scope": "javascript, typescript, vue, html",
    "prefix": "vf",
    "body": [
      "/* <!--@--> ($1): $2 ------------------------------------------------------------------------- */",
      "$1($2) {$3},"
    ]
  },
  "Async function in method in vue": {
    "scope": "javascript, typescript, vue, html",
    "prefix": "vaf",
    "body": [
      "/* <!--!--> Fetch: $1 /$2 ($3): $4 ------------------------------------------------------------------------- */",
      "async $1($2) {$3},"
    ]
  },

  //! Methods & Attributes ------------------------------------------------------------------------------------------------------------------
  "Setup method": {
    "scope": "javascript, typescript, vue",
    "prefix": "setup",
    "body": ["setup() {", "$1", "  return {$2}", "},"]
  },
  "Data method (same setup but v2)": {
    "scope": "javascript, typescript, vue",
    "prefix": "datav",
    "body": ["data() {", "  return {", "    $2", "  }", "},"]
  },
  "Component attribute": {
    "scope": "javascript, typescript, vue",
    "prefix": "comp",
    "body": ["components: {", "  $1", "},"]
  },
  "Props attribute": {
    "scope": "javascript, typescript, vue",
    "prefix": "props",
    "body": ["props: {", "  '$1'", "},"]
  },
  "Method attribute": {
    "scope": "javascript, typescript, vue",
    "prefix": "method",
    "body": ["methods: {", "  $1", "},"]
  },
  "Head method NuxtJS": {
    "scope": "javascript, typescript, vue",
    "prefix": "head",
    "body": [
      "head() {",
      "  return {",
      "    title: '$1',",
      "    meta: [",
      "      {",
      "        hid: '$2',",
      "        name: '$3',",
      "        content: '$4',",
      "      }",
      "    ]",
      "  }",
      "},"
    ]
  },

  //! Template generate ------------------------------------------------------------------------------------------------------------------
  "Template slot in vue": {
    "scope": "javascript, typescript, vue, html",
    "prefix": "tem",
    "body": ["<template #$1>", "  $2", "</template>"]
  },

  "init feather icon": {
    "scope": "javascript, typescript, vue, html",
    "prefix": "fi",
    "body": ["<feather-icon icon='TrendingUpIcon' />"]
  },

  //! Vue template generate ------------------------------------------------------------------------------------------------------------------
  "Vue 2 generate": {
    "scope": "javascript, typescript, vue",
    "prefix": "vue2",
    "body": [
      "<template>",
      "  <div class='$1-container'></div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  name: '$2',",
      "  props: {},",
      "  components: {},",
      "  data() {",
      "    return {}",
      "  },",
      "  methods: {},",
      "}",
      "</script>",
      "",
      "<style lang='scss' scoped></style>"
    ]
  },
  "Vue 3 generate": {
    "scope": "javascript, typescript, vue",
    "prefix": "vue",
    "body": [
      "<template>",
      "  <div class='$1-container'></div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "  name: '$2',",
      "  props: {},",
      "  components: {},",
      "  setup() {",
      "    return {}",
      "  },",
      "  methods: {},",
      "}",
      "</script>",
      "",
      "<style lang='scss' scoped></style>"
    ]
  },

  //! Vuex syntax
  "mapState generate": {
    "scope": "javascript, typescript, vue",
    "prefix": "mapstate",
    "body": ["...mapState({", "  $1: state => state.app.$2", "})"]
  }
}
